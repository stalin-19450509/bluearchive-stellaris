@colossus_scale = 30
@flowmap_speed = 0.17
@flowmap_intensity =  0.3

@titan_scale = 50
@flowmap_speed = 0.17
@flowmap_intensity =  0.3


#TODO: Switch out sound effects and VFX for correct ones. Currently using aquatic placeholders.
entity = {
	name = "decagrammaton_hod_colorized_entity"
	pdxmesh = "decagrammaton_hod_colorized_frame_mesh"

	locator = { name = "frame_ship" 		position = { 0  0  0 } }

	default_state = "idle"
	state = { name = "idle" animation = "idle" }
	state = { name = "moving" animation = "idle" }
	state = { name = "working" animation = "idle" }
	state = { name = "death" animation = "closed_death" looping = no
		event = { time = 9.75 node = "frame_ship" particle = "tox_01_8_titan_explosion_effect" sound = { soundeffect = ship_destroyed } }
		chance = {
			if_current_state = {
				"idle" = 100
				"moving" = 100
				"death" = 0
				"working" = 0
			}
		}
	}
	state = { name = "death" animation = "opened_death" looping = no animation_speed = 0.5
		event = { time = 9.75 node = "frame_ship" particle = "tox_01_8_titan_explosion_effect" sound = { soundeffect = ship_destroyed } }
		chance = {
			if_current_state = {
				"idle" = 0
				"moving" = 0
				"death" = 0
				"working" = 100
			}
		}
	}

	locator = { name = "part1" position = { -50 0 0 } }
	locator = { name = "part3" position = { -50 0 0 } }

	game_data = {
		size = @colossus_scale
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
	
	#attach = { frame_ship = "decagrammaton_hod_colorized_ship_entity" }
}

#TODO: Switch out sound effects and VFX for correct ones. Currently using aquatic placeholders.
entity = {
	name = "decagrammaton_hod_colorized_ship_entity"
	pdxmesh = "decagrammaton_hod_colorized_mesh"

	locator = { name = "frame_ship" 		position = { 0  0  0 } }

	default_state = "idle"
	# Actual idle state when being in idle/moving.
	state = { name = "idle" animation = "idle" looping = no next_state = "idle" animation_blend_time = 5 animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 100
				"moving" = 100
				"death" = 0
				"working" = 100
				"working_looping" = 0
			}
		}
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_idle" } }

		event = { time = 0 node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }

		event = { time = 0 node = "large_engine_01" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
	}
	# Idle state when going from opened state to idle.
	state = { name = "idle" animation = "closing"  looping = no next_state = "idle" animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 0
				"moving" = 0
				"death" = 0
				"working" = 100
				"working_looping" = 100
			}
		}
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_closing" stop_on_state_change = yes } }

		event = { time = 0 node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }


		event = { time = 0 node = "large_engine_01" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
	}
	# Actual moving state if going from idle/moving.
	state = { name = "moving" animation = "idle" looping = yes next_state = "moving" animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 100
				"moving" = 100
				"death" = 0
				"working" = 100
				"working_looping" = 0
			}
		}
		event = { sound = { soundeffect = "tox_ship_colossus_move" stop_on_state_change = yes } }

		event = { time = 0 node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }


		event = { time = 0 node = "large_engine_01" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "tox_01_100_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "tox_01_100_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }

	}
	# Moving state if going from open/working, uses closing animation.
	state = { name = "moving" animation = "closing"  looping = no next_state = "moving" animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 0
				"moving" = 0
				"death" = 0
				"working" = 0
				"working_looping" = 100
			}
		}
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_closing" stop_on_state_change = yes } }

		event = { time = 0 node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }


		event = { time = 0 node = "large_engine_01" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "tox_01_100_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "tox_01_100_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }

	}
	# Opened state, going after "kill_planet".
	state = { name = "working_looping" animation = "open" animation_speed = 0.5
		event = { time = 0	id = "beam_start" }

		#event = { trigger_once = yes sound = { soundeffect = "aqu_ship_colossus_open" stop_on_state_change = yes } }
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_idle" } }
		#event = { trigger_once = yes sound = { soundeffect = "amb_nemesis_colossus_idle_distortion" } }

		event = { time = 0 node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }

		event = { time = 0 node = "large_engine_01" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }

#	event = {	time = 0.8 	node = "wing_1_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_2_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_3_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_4_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_5_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#
#	event = {	time = 0.8 	node = "wing_1_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_2_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_3_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_4_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 0.8 	node = "wing_5_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }


		#event = { time = 1.10 node = "effects_tentacles" entity = "decagrammaton_hod_colorized_tentacle_front_entity" erosion_in = 1 erosion_out = 1 life = 2}
		#event = { time = 5.4 node = "effects_tentacles" entity = "decagrammaton_hod_colorized_tentacle_front_entity" erosion_in = 1 erosion_out = 1 life = 2}
		#event = { time = 9.6 node = "effects_tentacles" entity = "decagrammaton_hod_colorized_tentacle_front_entity" erosion_in = 1 erosion_out = 1 life = 2}



#### 13.26

	}
	# Opening state, goes into "working_looping" state when done.
	state = { name = "working" animation = "opening" looping = no next_state = "working_looping" animation_speed = 0.5
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_open" stop_on_state_change = yes } }
		event = { trigger_once = yes sound = { soundeffect = "tox_ship_colossus_idle" stop_on_state_change = yes } }

		event = { time = 1000 id = "beam_start" } #will never fire, but lets the game know that an event with this ID exists

		event = { time = 0 node = "large_engine_01" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "large_engine_02" particle = "generic_1_5_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_01" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_02" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_03" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_04" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_05" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "medium_engine_06" particle = "generic_1_25_exhaust_circle_idle" keep_particle = yes trigger_once = yes }


#	event = {	time = 8.3 	node = "wing_1_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 8.6 	node = "wing_2_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 8.9 	node = "wing_3_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 9.2 	node = "wing_4_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 9.5 	node = "wing_5_L_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#
#	event = {	time = 8.3 	node = "wing_1_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 8.6 	node = "wing_2_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 8.9 	node = "wing_3_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 9.2 	node = "wing_4_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }
#	event = {	time = 9.5 	node = "wing_5_R_effect"	entity = "decagrammaton_hod_colorized_effect_entity"	erosion_in = 0.8			erosion_out = 2.2	trigger_once = yes }


	}
	# Closed death state.
	state = { name = "death" animation = "closed_death" looping = no animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 100
				"moving" = 100
				"death" = 0
				"working" = 0
				"working_looping" = 0
			}
		}
		event = { trigger_once = yes sound = { soundeffect = "avian_colossus_death" stop_on_state_change = yes } }

		event = { time = 0.5 node = "explosion_locator_01" particle = "tox_01_075_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 3.3 node = "explosion_locator_02" particle = "tox_01_1_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 4.1 node = "explosion_locator_03" particle = "tox_01_2_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 6.2 node = "explosion_locator_04" particle = "tox_01_1_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 7.3 node = "explosion_locator_05" particle = "tox_01_1_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 8.0 node = "explosion_locator_06" particle = "tox_01_1_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 9.0 node = "explosion_locator_07" particle = "tox_01_2_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 9.1 node = "explosion_locator_08" particle = "tox_01_2_ship_explosion_effect" sound = { soundeffect = "ship_destroyed" } keep_particle = yes trigger_once = yes }
	}
	# Opened death state.
	state = { name = "death" animation = "opened_death" looping = no animation_blend_time = 2 animation_speed = 0.5
		chance = {
			if_current_state = {
				"idle" = 0
				"moving" = 0
				"death" = 0
				"working" = 100
				"working_looping" = 100
			}
		}
		event = { trigger_once = yes sound = { soundeffect = "avian_colossus_death" stop_on_state_change = yes } }

		event = { time = 0.3 node = "explosion_locator_01" particle = "tox_01_075_ship_explosion_effect" keep_particle = yes trigger_once = yes }
		event = { time = 3.6 node = "explosion_locator_02" particle = "tox_01_1_ship_explosion_effect" keep_particle = yes trigger_once = yes }
		event = { time = 4.3 node = "explosion_locator_03" particle = "tox_01_075_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 6.2 node = "explosion_locator_04" particle = "tox_01_1_ship_explosion_effect"keep_particle = yes trigger_once = yes }
		event = { time = 8.6 node = "explosion_locator_05" particle = "tox_01_2_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 9.2 node = "explosion_locator_06" particle = "tox_01_1_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 8.5 node = "explosion_locator_07" particle = "tox_01_075_ship_explosion_effect"  keep_particle = yes trigger_once = yes }
		event = { time = 10.1 node = "explosion_locator_08" particle = "tox_01_075_ship_explosion_effect" sound = { soundeffect = "ship_destroyed" } keep_particle = yes trigger_once = yes }
	}

	#locator = { name = "planet_killer_gun_01" position = { 0 0 0 } } # Actual locator in mesh.


	game_data = {
		size = @colossus_scale
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
	locator = {
		name = "root"
		position = { 0 0 0 }
		rotation = { 0 0 0 }
	}

	attach = {
		root = "ba_ship_halo_decagrammaton_colorized_entity"
	}

	locator = {
		name = "left_root"
		position = { 72 4 0 }
		rotation = { 0 0 -90 }
	}

	attach = {
		left_root = "decagrammaton_hod_colorized_titan_bow_entity"
	}

	locator = {
		name = "right_root"
		position = { -72 4 0 }
		rotation = { -0 0 90 }
	}

	attach = {
		right_root = "decagrammaton_hod_colorized_titan_bow_entity"
	}

	locator = {
		name = "left_missile_1"
		position = { 72 23 0 }
		rotation = { 0 0 -25 }
	}

	attach = {
		left_missile_1 = "decagrammaton_hod_colorized_turret_missile_large_entity"
	}

	locator = {
		name = "right_missile_1"
		position = { -72 23 0 }
		rotation = { -0 0 25 }
	}

	attach = {
		right_missile_1 = "decagrammaton_hod_colorized_turret_missile_large_entity"
	}
	locator = {
		name = "left_missile_2"
		position = { 72 -16 0 }
		rotation = { 0 0 -165 }
	}

	attach = {
		left_missile_2 = "decagrammaton_hod_colorized_turret_missile_large_entity"
	}

	locator = {
		name = "right_missile_2"
		position = { -72 -16 0 }
		rotation = { -0 0 165 }
	}

	attach = {
		right_missile_2 = "decagrammaton_hod_colorized_turret_missile_large_entity"
	}

	locator = {
		name = "left_root_a"
		position = { 40 4 -80 }
		rotation = { 65 0 -90 }
	}

	attach = {
		left_root_a = "decagrammaton_hod_colorized_turret_xl_entity"
	}

	locator = {
		name = "right_root_a"
		position = { -40 4 -80 }
		rotation = { -65 0 90 }
	}

	attach = {
		right_root_a = "decagrammaton_hod_colorized_turret_xl_entity"
	}

	locator = {
		name = "root_a"
		position = { 0 -40 0 }
		rotation = { 0 75 0 }
	}

	attach = {
		root_a = "decagrammaton_hod_colorized_titan_mid_entity"
	}
	locator = {
		name = "root_b"
		position = { 0 -100 0 }
		rotation = { 0 105 0 }
	}

	attach = {
		root_b = "decagrammaton_hod_colorized_titan_mid_1_entity"
	}
	locator = {
		name = "root_c"
		position = { 0 -72 0 }
		rotation = { 0 0 0 }
	}

	attach = {
		root_c = "decagrammaton_hod_colorized_portal_rings_entity"
	}

	locator = {
		name = "right_tentacle_1"
		position = { -52 23 0 }
		rotation = { 0 0 30 }
	}

	attach = {
		right_tentacle_1 = "decagrammaton_hod_colorized_tentacle_entity"
	}

	locator = {
		name = "left_tentacle_1"
		position = { 52 23 0 }
		rotation = { 0 0 -30 }
	}

	attach = {
		left_tentacle_1 = "decagrammaton_hod_colorized_tentacle_entity"
	}


	locator = {
		name = "right_tentacle_2"
		position = { -52 -23 0 }
		rotation = { 0 0 150 }
	}

	attach = {
		right_tentacle_2 = "decagrammaton_hod_colorized_tentacle_entity"
	}

	locator = {
		name = "left_tentacle_2"
		position = { 52 -23 0 }
		rotation = { 0 0 -150 }
	}

	attach = {
		left_tentacle_2 = "decagrammaton_hod_colorized_tentacle_entity"
	}

	locator = {
		name = "right_large_gun_1"
		position = { -105 110 0 }
		rotation = { 0 0 0 }
	}

	locator = {
		name = "left_large_gun_1"
		position = { 105 110 0 }
		rotation = { 0 0 0 }
	}

	locator = {
		name = "right_large_gun_2"
		position = { -105 -110 0 }
		rotation = { 0 0 0 }
	}

	locator = {
		name = "left_large_gun_2"
		position = { 105 -110 0 }
		rotation = { 0 0 0 }
	}
}


entity = {
	name = "decagrammaton_hod_colorized_effect_entity"
	pdxmesh = "decagrammaton_hod_colorized_effect_mesh"
	scale = 1
		game_data = {
		bloom_factor			= 1.2
		uv_animation_speed 		= 0.4
		uv_animation_direction 	= { .15 1.0 }
		}
}




entity = {
	name = "decagrammaton_hod_colorized_titan_bow_entity"
	pdxmesh = "decagrammaton_hod_colorized_titan_bow_mesh"
	locator = { name = "root"				position = { 0	0  0 } }

	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		start_event = { node = "light_locator_04" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }

	}
	state = { name = "death" state_time = 5 looping = no }
	
	attach = { "root" = "decagrammaton_hod_colorized_titan_glow_effect_mesh_entity" }

	game_data = {
		emissive_recolor_crunch = 5.0
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
}

entity = {
	name = "decagrammaton_hod_colorized_titan_mid_entity"
	pdxmesh = "decagrammaton_hod_colorized_titan_mid_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		start_event = { node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }

	}

	game_data = {
		emissive_recolor_crunch = 5.0
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
}

entity = {
	name = "decagrammaton_hod_colorized_titan_mid_1_entity"
	pdxmesh = "decagrammaton_hod_colorized_titan_mid_1_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		start_event = { node = "light_locator_03" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }

	}

	game_data = {
		emissive_recolor_crunch = 5.0
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
}

entity = {
	name = "decagrammaton_hod_colorized_titan_stern_entity"
	pdxmesh = "decagrammaton_hod_colorized_titan_stern_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
	#	start_event = { node = "light_locator_01" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
	
		start_event = { node = "engine_large_01" particle = "generic_big_3_exhaust_circle_moving" keep_particle = yes trigger_once = yes }

		start_event = { node = "engine_large_02" particle = "generic_1_75_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_large_03" particle = "generic_1_75_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
	
	start_event = { node = "engine_medium_01" particle = "generic_1_75_exhaust_circle_idle" keep_particle = yes trigger_once = yes }
	start_event = { node = "engine_medium_02" particle = "generic_1_75_exhaust_circle_idle" keep_particle = yes trigger_once = yes }


	}
	state = { name = "moving" state_time = 5
	#	start_event = { node = "light_locator_02" particle = "tox_01_ship_light_effect" keep_particle = yes trigger_once = yes }
	
		start_event = { node = "engine_large_01" particle = "tox_01_500_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_large_02" particle = "tox_01_350_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_large_03" particle = "tox_01_350_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_medium_01" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_medium_02" particle = "tox_01_250_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_01" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_02" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_03" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_04" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_05" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_06" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_07" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }
		start_event = { node = "engine_small_08" particle = "tox_01_150_ship_exhaust" keep_particle = yes trigger_once = yes }

	}
	state = { name = "death" state_time = 5 looping = no }

	game_data = {
		emissive_recolor_crunch = 5.0
		uv_animation_speed 		= @flowmap_speed

		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
}

entity = {
	name = "decagrammaton_hod_colorized_titan_glow_effect_mesh_entity"
	pdxmesh = "decagrammaton_hod_colorized_titan_light_effect_mesh"
		
		game_data = {
		uv_animation_speed 		= 0.1
		uv_animation_direction 	= { 0.4 1.0 }
		bloom_factor = 1.4
	}
	
	scale = 1
}


entity = {
	name = "decagrammaton_hod_colorized_turret_xl_entity"
	pdxmesh = "decagrammaton_hod_colorized_turret_xl_mesh"

	state = { name = "idle"	}
	state = { name = "attack" looping = no next_state = "idle"
	}
	scale = 1

	game_data = {
		emissive_recolor_crunch = 2.0
		uv_animation_speed 		= @flowmap_speed
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
	}
}



entity = {
	name = "decagrammaton_hod_colorized_portal_rings_entity"
	pdxmesh = "decagrammaton_hod_colorized_portal_rings_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
	#	event = { time = 0 node = "portal_1" particle = "dimensional_horror_portal_effect" keep_particle = yes trigger_once = yes }
	}
	
	game_data = {
		uv_animation_speed   = 0.1
		uv_animation_direction  = { 0.4 0.4 }
	}

}


entity = {
	name = "decagrammaton_hod_colorized_turret_missile_large_entity"
	pdxmesh = "decagrammaton_hod_colorized_turret_missile_large_mesh"

	state = { name = "idle"	}
	state = { name = "attack" looping = no next_state = "idle"
	}
	scale = 0.85

	game_data = {
		emissive_recolor_crunch = 5.0

		uv_animation_speed 		= @flowmap_speed
		#NOTE: Since the ship makes use of a flowmap, this is a special case
		#where the uv_animation_direction variable is used to determine the flowmap strength
		#instead of an animation direction.
		uv_animation_direction 	= { @flowmap_intensity 0.0 }
		}
}







animation = {
	name = "toxoid_01_titan_frame_idle_animation"
	file = "toxoid_01_titan_frame_idle.anim"
}

animation = {
	name = "toxoid_01_titan_frame_death_animation"
	file = "toxoid_01_titan_frame_death.anim"
}


animation = {
	name = "toxoid_01_colossus_idle_animation"
	file = "toxoid_01_colossus_idle.anim"
}
animation = {
	name = "toxoid_01_colossus_open_animation"
	file = "toxoid_01_colossus_open.anim"
}
animation = {
	name = "toxoid_01_colossus_opening_animation"
	file = "toxoid_01_colossus_opening.anim"
}
animation = {
	name = "toxoid_01_colossus_closing_animation"
	file = "toxoid_01_colossus_closing.anim"
}
animation = {
	name = "toxoid_01_colossus_closed_death_animation"
	file = "toxoid_01_colossus_closed_death.anim"
}
animation = {
	name = "toxoid_01_colossus_opened_death_animation"
	file = "toxoid_01_colossus_opened_death.anim"
}

animation = {
	name = "toxoid_01_colossus_frame_idle_animation"
	file = "toxoid_01_colossus_frame_idle.anim"
}

animation = {
	name = "toxoid_01_colossus_frame_closed_death_animation"
	file = "toxoid_01_colossus_frame_closed_death.anim"
}

animation = {
	name = "toxoid_01_colossus_frame_opened_death_animation"
	file = "toxoid_01_colossus_frame_opened_death.anim"
}
